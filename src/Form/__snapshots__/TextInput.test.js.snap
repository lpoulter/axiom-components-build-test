// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextInput renders TextInputIcon when left aligned renders when is in progress 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--medium"
    >
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
      />
      <span
        className="ax-input__progress"
      >
        <svg
          className="ax-progress-infinite ax-progress-infinite--subtle ax-radial-progress ax-radial-progress--small"
          style={
            Object {
              "height": "1rem",
              "width": "1rem",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            transform="translate(12, 12) rotate(-90)"
          >
            <circle
              className="ax-progress-infinite__arc"
              r={10}
              style={
                Object {
                  "stroke": "url(#ax-progress-infinite__filter--subtle)",
                  "strokeDasharray": 62.83185307179586,
                  "strokeDashoffset": 15.707963267948966,
                  "strokeWidth": 4,
                }
              }
            />
          </g>
        </svg>
      </span>
    </div>
  </label>
</div>
`;

exports[`TextInput renders TextInputIcon when left aligned renders when showing onClear 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--medium"
    >
      <span
        className="ax-input__icon ax-input__icon--align-right"
      >
        <a
          className="ax-link ax-link--style-subtle"
          onClick={[Function]}
        >
          <svg
            className="ax-icon ax-icon--cross"
            dangerouslySetInnerHTML={
              Object {
                "__html": "",
              }
            }
            style={
              Object {
                "height": "1rem",
                "width": "1rem",
              }
            }
            viewBox="0 0 16 16"
          />
        </a>
      </span>
      <span
        className="ax-input__icon ax-input__icon--align-left"
      >
        <svg
          className="ax-icon ax-icon--twitter"
          dangerouslySetInnerHTML={
            Object {
              "__html": "",
            }
          }
          style={
            Object {
              "height": "1rem",
              "width": "1rem",
            }
          }
          viewBox="0 0 16 16"
        />
      </span>
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
        value="foobar"
      />
    </div>
  </label>
</div>
`;

exports[`TextInput renders TextInputIcon when right aligned does not render when is in progress 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--medium"
    >
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
      />
      <span
        className="ax-input__progress"
      >
        <svg
          className="ax-progress-infinite ax-progress-infinite--subtle ax-radial-progress ax-radial-progress--small"
          style={
            Object {
              "height": "1rem",
              "width": "1rem",
            }
          }
          viewBox="0 0 24 24"
        >
          <g
            transform="translate(12, 12) rotate(-90)"
          >
            <circle
              className="ax-progress-infinite__arc"
              r={10}
              style={
                Object {
                  "stroke": "url(#ax-progress-infinite__filter--subtle)",
                  "strokeDasharray": 62.83185307179586,
                  "strokeDashoffset": 15.707963267948966,
                  "strokeWidth": 4,
                }
              }
            />
          </g>
        </svg>
      </span>
    </div>
  </label>
</div>
`;

exports[`TextInput renders TextInputIcon when right aligned renders when showing onClear 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--medium"
    >
      <span
        className="ax-input__icon ax-input__icon--align-right"
      >
        <a
          className="ax-link ax-link--style-subtle"
          onClick={[Function]}
        >
          <svg
            className="ax-icon ax-icon--cross"
            dangerouslySetInnerHTML={
              Object {
                "__html": "",
              }
            }
            style={
              Object {
                "height": "1rem",
                "width": "1rem",
              }
            }
            viewBox="0 0 16 16"
          />
        </a>
      </span>
      <span
        className="ax-input__icon ax-input__icon--align-right"
      >
        <svg
          className="ax-icon ax-icon--twitter"
          dangerouslySetInnerHTML={
            Object {
              "__html": "",
            }
          }
          style={
            Object {
              "height": "1rem",
              "width": "1rem",
            }
          }
          viewBox="0 0 16 16"
        />
      </span>
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
        value="foobar"
      />
    </div>
  </label>
</div>
`;

exports[`TextInput renders when disabled 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--medium ax-input__icon-container--disabled"
    >
      <input
        className="ax-input"
        disabled={true}
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
      />
    </div>
  </label>
</div>
`;

exports[`TextInput renders when invalid 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--medium ax-input__icon-container--invalid"
    >
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
      />
    </div>
  </label>
</div>
`;

exports[`TextInput renders when valid 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--medium ax-input__icon-container--valid"
    >
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
      />
    </div>
  </label>
</div>
`;

exports[`TextInput renders with TextInputButton 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--medium"
    >
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
      />
    </div>
  </label>
  <span
    className="ax-input__button"
  >
    <button
      className="ax-button ax-button--accent ax-button--primary ax-button--rectangle-medium ax-button--joined-left"
    >
      Test
    </button>
  </span>
</div>
`;

exports[`TextInput renders with defaultProps 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--medium"
    >
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
      />
    </div>
  </label>
</div>
`;

exports[`TextInput renders with label 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__hint-wrapper ax-space--x2"
    >
      <div
        className="ax-input__wrapper--label ax-text--size-body"
      >
        Lorem ipsum
      </div>
    </div>
    <div
      className="ax-input__icon-container ax-input__icon-container--medium"
    >
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
      />
    </div>
  </label>
</div>
`;

exports[`TextInput renders with onClear and value 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--medium"
    >
      <span
        className="ax-input__icon ax-input__icon--align-right"
      >
        <a
          className="ax-link ax-link--style-subtle"
          onClick={[Function]}
        >
          <svg
            className="ax-icon ax-icon--cross"
            dangerouslySetInnerHTML={
              Object {
                "__html": "",
              }
            }
            style={
              Object {
                "height": "1rem",
                "width": "1rem",
              }
            }
            viewBox="0 0 16 16"
          />
        </a>
      </span>
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
        value="Lorem"
      />
    </div>
  </label>
</div>
`;

exports[`TextInput renders with size large 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--large"
    >
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
      />
    </div>
  </label>
</div>
`;

exports[`TextInput renders with size medium 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--medium"
    >
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
      />
    </div>
  </label>
</div>
`;

exports[`TextInput renders with size small 1`] = `
<div
  className="ax-input__container ax-space--x4"
>
  <label
    className="ax-input__wrapper ax-space--x4"
  >
    <div
      className="ax-input__icon-container ax-input__icon-container--small"
    >
      <input
        className="ax-input"
        onBlur={[Function]}
        onFocus={[Function]}
        type="text"
      />
    </div>
  </label>
</div>
`;
